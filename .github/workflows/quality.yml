name: Code Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  # Fast quality checks
  quality-gate:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun Environment
        uses: ./.github/actions/setup-bun

      - name: ESLint analysis
        run: |
          echo "Running ESLint analysis..."
          bun run lint --max-warnings 0

      - name: TypeScript strict checking
        run: |
          echo "Running strict TypeScript compilation..."
          bunx tsc --noEmit --strict

      - name: Format check
        run: |
          echo "Checking code formatting..."
          bun run format:check

      - name: Unused exports check
        run: |
          echo "Checking for unused exports..."
          bunx ts-unused-exports tsconfig.json --excludePathsFromReport="src/test-utils;tests/" || echo "⚠️ Unused exports detected"
        continue-on-error: true

  # Security and dependency analysis
  security-analysis:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun Environment
        uses: ./.github/actions/setup-bun

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check for security vulnerabilities
        run: bun audit --audit-level moderate

      - name: License compliance check
        run: bunx license-checker --summary
        continue-on-error: true

      - name: Bundle size analysis
        run: |
          bun run build
          du -sh dist/

  # Performance and Benchmarks
  performance-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run performance benchmarks
        run: bun test tests/ --filter="performance" --timeout 60000
        continue-on-error: true

      - name: Cache performance demo
        run: timeout 30s bun run src/demo/cache-performance-demo.ts || true

      - name: Memory usage test
        run: |
          echo "Testing memory usage..."
          timeout 30s bun --max-old-space-size=512 run src/demo/demo.ts || true

  # Documentation and API Validation
  documentation-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Validate TypeScript exports
        run: bunx tsc --noEmit --declaration --emitDeclarationOnly

      - name: Check README links
        run: |
          if command -v markdown-link-check &> /dev/null; then
            markdown-link-check README.md --config .github/workflows/link-check-config.json || true
          else
            echo "Skipping link check - markdown-link-check not available"
          fi

      - name: Validate demo scenarios
        run: |
          echo "Validating demo scenarios exist..."
          ls -la src/demo/demo-scenarios/ || echo "Demo scenarios directory not found"

      - name: API surface validation
        run: |
          echo "Checking public API surface..."
          bunx tsc --declaration --emitDeclarationOnly --outDir temp-declarations
          find temp-declarations -name "*.d.ts" | wc -l
          rm -rf temp-declarations
