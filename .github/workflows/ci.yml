name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Build and Test Job
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: ['1.0.0', 'latest']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: TypeScript type checking
        run: bunx tsc --noEmit --skipLibCheck

      - name: Run linting
        run: bun run lint

      - name: Run tests
        run: bun test --coverage

      - name: Build project
        run: bun run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: matrix.bun-version == 'latest'
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # Architecture Compliance Job
  architecture-tests:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run architecture tests
        run: bun test tests/architecture/ --verbose

      - name: Validate dependency rules
        run: bun test tests/architecture/dependency-rules.test.ts

      - name: Check interface segregation
        run: bun test tests/architecture/isp.test.ts

  # Security and Quality Job
  security-and-quality:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Security audit
        run: bun audit

      - name: Check for outdated packages
        run: bun outdated
        continue-on-error: true

      - name: Run format check
        run: bun run format:check

  # Demo and Integration Tests
  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run integration tests
        run: bun test tests/integration/ --timeout 30000

      - name: Run E2E tests
        run: bun test tests/e2e/ --timeout 60000

      - name: Test demo scenarios
        run: bun run demo
        timeout-minutes: 5
